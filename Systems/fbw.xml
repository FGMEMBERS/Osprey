<?xml version="1.0"?>

<PropertyList>

    <!-- Following PID controllers and filters implement the Fly-By-Wire system.

         "Airbusification" of the Bell Boeing V-22
         The actual V-22 uses a displacement controller to command the deflection
         of the control surfaces. Since I do not have a clear picture of how to
         provide flight envelope protection, the Fly-By-Wire system as
         implemented below pretends the V-22 uses a sidestick controller.

         To test the response of a PID controller, set <debug> to true, modify
         <reference> to use a certain <value>, and then reload the autopilot
         via the Debug menu in FlightGear. The controller should start tracking
         the given <value>. Copy and paste the debug output to a file called
         "debug-output" and extract the first 200 (for example) input values
         and save those to another file called "pid-samples":

            grep input debug-output | cut -d " " -f 5 | head -n 200 > pid-samples

         Then start gnuplot and execute:

            plot "pid-samples" with lines

         General work flow is:

         1) Pause FlightGear
         2) Make some modifications to a controller
         3) Reload the autopilot via the Debug menu
         4) Unpause
         5) Pause FlightGear again after a couple of seconds
         6) Analyze the debug output

         Sources:
            [1]  http://trace.tennessee.edu/cgi/viewcontent.cgi?article=3171&context=utk_gradthes
            [2]  http://www.bellhelicopter.com/MungoBlobs/126/268/V-22%20Guidebook%202013_update_PREVIEW_LR2.pdf
    -->

    <!-- ================================================================== -->
    <!-- Ground Contact Logic                                               -->
    <!-- ================================================================== -->

    <!-- Enable FBW for roll axis modes if ground contact logic detects
         aircraft's roll axis (x) is unconstrained.
    -->
    <logic>
        <name>FBW Roll Axis On/Off Switcher</name>
        <input>
            <not>
                <and>
                    <property>/gear/gear[1]/wow-avg</property>
                    <property>/gear/gear[2]/wow-avg</property>
                </and>
            </not>
        </input>
        <output>
            <property>/v22/pfcs/active/roll-axis-unconstrained</property>
        </output>
    </logic>

    <!-- Enable FBW Roll Rate if active/roll-rate is true and aircraft is in the air -->
    <logic>
        <name>FBW Roll Rate On/Off Switcher</name>
        <input>
            <and>
                <property>/v22/pfcs/active/roll-rate</property>
                <property>/v22/pfcs/active/roll-axis-unconstrained</property>
            </and>
        </input>
        <output>
            <property>/v22/pfcs/active/roll-rate-in-air</property>
        </output>
    </logic>

    <!-- Enable FBW for pitch axis modes if ground contact logic detects
         aircraft's pitch axis (y) is unconstrained.
    -->
    <logic>
        <name>FBW Pitch Axis On/Off Switcher</name>
        <input>
            <not>
                <and>
                    <property>/gear/gear[0]/wow-avg</property>
                    <or>
                        <property>/gear/gear[1]/wow-avg</property>
                        <property>/gear/gear[2]/wow-avg</property>
                    </or>
                </and>
            </not>
        </input>
        <output>
            <property>/v22/pfcs/active/pitch-axis-unconstrained</property>
        </output>
    </logic>

    <!-- Enable FBW Pitch Rate if active/pitch-rate is true and aircraft is in the air -->
    <logic>
        <name>FBW Pitch Rate On/Off Switcher</name>
        <input>
            <and>
                <property>/v22/pfcs/active/pitch-rate</property>
                <property>/v22/pfcs/active/pitch-axis-unconstrained</property>
            </and>
        </input>
        <output>
            <property>/v22/pfcs/active/pitch-rate-in-air</property>
        </output>
    </logic>

    <!-- ================================================================== -->
    <!-- Input Filters                                                      -->
    <!-- ================================================================== -->

    <filter>
        <name>Input Roll And Trim</name>
        <type>gain</type>
        <gain>1.0</gain>
        <input>
            <expression>
                <sum>
                    <property>/controls/flight/aileron</property>
                    <property>/controls/flight/aileron-trim</property>
                </sum>
            </expression>
        </input>
        <output>
            <property>/v22/pfcs/target/roll</property>
        </output>

        <min>-1.0</min>
        <max>1.0</max>
    </filter>

    <filter>
        <name>Input Pitch And Trim</name>
        <type>gain</type>
        <gain>1.0</gain>
        <input>
            <expression>
                <sum>
                    <property>/controls/flight/elevator</property>
                    <property>/controls/flight/elevator-trim</property>
                </sum>
            </expression>
        </input>
        <output>
            <property>/v22/pfcs/target/pitch</property>
        </output>

        <min>-1.0</min>
        <max>1.0</max>
    </filter>

    <filter>
        <name>Input Rudder And Trim</name>
        <type>gain</type>
        <gain>1.0</gain>
        <input>
            <expression>
                <sum>
                    <property>/controls/flight/rudder</property>
                    <property>/controls/flight/rudder-trim</property>
                </sum>
            </expression>
        </input>
        <output>
            <property>/v22/pfcs/target/yaw</property>
        </output>

        <min>-1.0</min>
        <max>1.0</max>
    </filter>

    <!-- ================================================================== -->
    <!-- Roll Axis Modes                                                    -->
    <!-- ================================================================== -->

    <!-- Computes the bank angle limit based on the tilt of the nacelles
         and the airspeed.
    -->
    <filter>
        <name>FBW Bank Angle Limit Computer</name>
        <type>noise-spike</type>
        <input>
            <condition>
                <or>
                    <less-than>
                        <property>/sim/model/v22/tilt</property>
                        <value>15.0</value>
                    </less-than>
                    <less-than>
                        <property>/velocities/airspeed-kt</property>
                        <value>60.0</value>
                    </less-than>
                </or>
            </condition>
            <value>30.0</value>
        </input>
        <input>
            <value>60.0</value>
        </input>
        <output>
            <property>/v22/pfcs/target/roll-hold-limit</property>
        </output>

        <max-rate-of-change>5.0</max-rate-of-change>
    </filter>

    <!-- Connects the stick directly to the ailerons servos, bypassing
         any PID controllers, giving the pilot direct unfiltered
         control over the ailerons.
    -->
    <filter>
        <name>Direct Mode Stick Roll Rate</name>
        <type>gain</type>
        <gain>
            <property>/v22/pfcs/settings/direct-roll-rate-gain</property>
            <abs type="bool">true</abs>
            <max>1.0</max>
        </gain>
        <enable>
            <condition>
                <not>
                    <property>/v22/pfcs/active/roll-rate-in-air</property>
                </not>
            </condition>
        </enable>
        <input>
            <property>/v22/pfcs/target/roll</property>
        </input>
        <output>
            <property>/v22/pfcs/output/aileron</property>
        </output>
    </filter>

    <!-- Connects the stick to either the FBW target roll hold or target
         roll rate.
    -->
    <filter>
        <name>FBW Stick Roll</name>
        <type>gain</type>
        <gain>100.0</gain>
        <enable>
            <condition>
                <and>
                    <property>/v22/pfcs/active/roll-rate-in-air</property>
                    <not>
                        <property>/v22/pfcs/active/roll-hold</property>
                    </not>
                </and>
            </condition>
        </enable>
        <input>
            <property>/v22/pfcs/target/roll</property>
        </input>
        <output>
            <property>/v22/pfcs/target/roll-rate</property>
        </output>
    </filter>

    <!-- Tracks a bank angle (phi). The roll is limited to be within the
         roll hold limit so that the pilot can never make the aircraft
         bank more than this limit allows.

         Stage #1 for Roll Hold.
    -->
    <pid-controller>
        <name>FBW Roll Hold</name>
        <debug>false</debug>
        <enable>
            <property>/v22/pfcs/active/roll-hold</property>
        </enable>
        <input>
            <property>/orientation/roll-deg</property>
        </input>
        <reference>
            <property>/v22/pfcs/target/roll-deg</property>
            <condition>
                <property>/v22/pfcs/active/bank-angle-hard-limit</property>
            </condition>
            <min>
                <property>/v22/pfcs/target/roll-hold-limit</property>
                <scale>-1.0</scale>
            </min>
            <max>
                <property>/v22/pfcs/target/roll-hold-limit</property>
            </max>
        </reference>
        <reference>
            <property>/v22/pfcs/target/roll-deg</property>
        </reference>
        <output>
            <property>/v22/pfcs/target/roll-rate</property>
        </output>
        <config>
            <Kp>0.73</Kp>
            <Ti>3.75</Ti>
            <Td>0.014</Td>
            <u_min>
                <property>/v22/pfcs/settings/roll-rate-limit</property>
                <scale>-1.0</scale>
            </u_min>
            <u_max>
                <property>/v22/pfcs/settings/roll-rate-limit</property>
            </u_max>
        </config>
    </pid-controller>

    <!-- Enable FBW Roll Rate if FBW Roll Hold is enabled -->
    <logic>
        <name>FBW Roll Hold Dependency FBW Roll Rate</name>
        <enable>
            <property>/v22/pfcs/active/roll-hold</property>
        </enable>
        <input>
            <true />
        </input>
        <output>
            <property>/v22/pfcs/active/roll-rate</property>
        </output>
    </logic>

    <!-- Use FBW Roll Rate if and only if using sidestick controller
         when FBW Roll Hold is disabled.
    -->
    <logic>
        <name>FBW Sidestick Controller Dependency FBW Roll Rate</name>
        <enable>
            <condition>
                <not>
                    <property>/v22/pfcs/active/roll-hold</property>
                </not>
            </condition>
        </enable>
        <input>
            <property>/v22/pfcs/active/sidestick-controller</property>
        </input>
        <output>
            <property>/v22/pfcs/active/roll-rate</property>
        </output>
    </logic>

    <!-- Set active/roll-rate-bank-angle to true if the current roll
         is close to the bank angle limit, set to false otherwise.
         Depending on whether the output of this logic element is
         true or false, the bank angle limiter filter will modify the
         roll rate signal or not (letting it go through unfiltered).
    -->
    <logic>
        <name>FBW Roll Rate Bank Angle Limiter On/Off Switcher</name>
        <input>
            <and>
                <property>/v22/pfcs/active/bank-angle-hard-limit</property>
                <less-than>
                    <expression>
                        <abs>
                            <difference>
                                <property>/v22/pfcs/target/roll-hold-limit</property>
                                <abs>
                                    <property>/orientation/roll-deg</property>
                                </abs>
                            </difference>
                        </abs>
                    </expression>

                    <!-- Enable roll rate limiting if distance to bank
                         angle limit is less than or equal to this value.
                    -->
                    <value>15.0</value>
                </less-than>
            </and>
        </input>
        <output>
            <property>/v22/pfcs/active/roll-rate-bank-angle</property>
        </output>
    </logic>

    <!-- Reduces the target roll rate if the current bank angle is close
         to the limit and the aircraft is moving away from the center.
         If the pilot tries to roll back to the center position (phi = 0),
         then let the signal go through unfiltered.
    -->
    <filter>
        <name>FBW Roll Rate Bank Angle Limiter</name>
        <type>gain</type>
        <gain>1.0</gain>
        <input>
            <condition>
                <and>
                    <!-- Only enable limiter if close to the bank angle limit -->
                    <property>/v22/pfcs/active/roll-rate-bank-angle</property>

                    <!-- Only enable limiter if rolling to the right, away
                         from the center (phi = 0).
                    -->
                    <greater-than>
                        <property>/orientation/roll-deg</property>
                        <value>0.0</value>
                    </greater-than>
                    <greater-than>
                        <property>/v22/pfcs/target/roll-rate</property>
                        <value>0.0</value>
                    </greater-than>
                </and>
            </condition>
            <property>/v22/pfcs/target/roll-rate</property>
            <max>
                <!-- f(x) = sin(x * 1/2*pi / 15) * 20

                     The top of the sine is at (15, 20). The input is the
                     difference (error) between the bank angle limit and
                     actual roll (phi).
                -->
                <expression>
                    <product>
                        <sin>
                            <product>
                                <difference>
                                    <property>/v22/pfcs/target/roll-hold-limit</property>
                                    <property>/orientation/roll-deg</property>
                                </difference>
                                <div>
                                    <value>1.5707963267948966</value> <!-- rad(1/2*pi) = deg(90) -->
                                    <value>15.0</value> <!-- x-coord of positive top -->
                                </div>
                            </product>
                        </sin>
                        <value>20.0</value> <!-- y-coord of positive top -->
                    </product>
                </expression>
            </max>
        </input>
        <input>
            <condition>
                <and>
                    <!-- Only enable limiter if close to the bank angle limit -->
                    <property>/v22/pfcs/active/roll-rate-bank-angle</property>

                    <!-- Only enable limiter if moving to the left, away
                         from the center (phi = 0).
                    -->
                    <less-than>
                        <property>/orientation/roll-deg</property>
                        <value>0.0</value>
                    </less-than>
                    <less-than>
                        <property>/v22/pfcs/target/roll-rate</property>
                        <value>0.0</value>
                    </less-than>
                </and>
            </condition>
            <property>/v22/pfcs/target/roll-rate</property>
            <min>
                <!-- f(x) = sin(x * 1/2*pi / 15) * 20

                     The negative top of the sine is at (-15, -20). The
                     input is the difference (error) between the bank
                     angle limit and actual roll (phi).
                -->
                <expression>
                    <product>
                        <sin>
                            <product>
                                <difference>
                                    <product>
                                        <property>/v22/pfcs/target/roll-hold-limit</property>
                                        <value>-1.0</value>
                                    </product>
                                    <property>/orientation/roll-deg</property>
                                </difference>
                                <div>
                                    <value>1.5707963267948966</value> <!-- rad(1/2*pi) = deg(90) -->
                                    <value>15.0</value> <!-- absolute x-coord of negative top -->
                                </div>
                            </product>
                        </sin>
                        <value>20.0</value> <!-- absolute y-coord of negative top -->
                    </product>
                </expression>
            </min>
        </input>
        <input>
            <!-- If the above conditions do not apply (aircraft rolls
                 back to the center or is too far away from the bank angle
                 limit), then we want to directly pass through the roll
                 rate, unfiltered.
            -->
            <property>/v22/pfcs/target/roll-rate</property>
        </input>
        <output>
            <property>/v22/pfcs/target/roll-rate-bank-limited</property>
        </output>
    </filter>

    <!-- Tracks a given roll rate (p). The target roll rate is limited to
         be no greater than the roll rate limit.

         Also acts as stage #2 for FBW Roll Hold.
    -->
    <pid-controller>
        <name>FBW Roll Rate</name>
        <debug>false</debug>
        <enable>
            <property>/v22/pfcs/active/roll-rate-in-air</property>
        </enable>
        <input>
            <property>/orientation/roll-rate-degps</property>
        </input>
        <reference>
            <property>/v22/pfcs/target/roll-rate-bank-limited</property>
            <min>
                <property>/v22/pfcs/settings/roll-rate-limit</property>
                <scale>-1.0</scale>
            </min>
            <max>
                <property>/v22/pfcs/settings/roll-rate-limit</property>
            </max>
        </reference>
        <output>
            <property>/v22/pfcs/output/aileron</property>
        </output>
        <config>
            <!-- Response should be something like Docs/fbw-roll-rate.png -->
            <Kp>0.016</Kp>
            <Ti>1.0</Ti>
            <Td>0.0002</Td>
            <u_min>-1.0</u_min>
            <u_max>1.0</u_max>
        </config>
    </pid-controller>

    <!-- ================================================================== -->
    <!-- Pitch Axis Modes                                                   -->
    <!-- ================================================================== -->

    <!-- Connects the stick directly to the elevator servos, bypassing
         any PID controllers, giving the pilot direct unfiltered
         control over the elevator.
    -->
    <filter>
        <name>Direct Mode Stick Pitch Rate</name>
        <type>gain</type>
        <gain>
            <property>/v22/pfcs/settings/direct-pitch-rate-gain</property>
            <abs type="bool">true</abs>
            <max>1.0</max>
        </gain>
        <enable>
            <condition>
                <not>
                    <property>/v22/pfcs/active/pitch-rate-in-air</property>
                </not>
            </condition>
        </enable>
        <input>
            <property>/v22/pfcs/target/pitch</property>
        </input>
        <output>
            <property>/v22/pfcs/output/elevator</property>
        </output>
    </filter>

    <!-- Connects the stick to either the FBW target pitch hold or target
         pitch rate.
    -->
    <filter>
        <name>FBW Stick Pitch</name>
        <type>gain</type>
        <gain>100.0</gain>
        <enable>
            <condition>
                <and>
                    <property>/v22/pfcs/active/pitch-rate-in-air</property>
                    <or>
                        <not>
                            <property>/v22/pfcs/active/pitch-hold</property>
                        </not>
                        <property>/v22/afcs/active/vs-hold</property>
                        <property>/v22/afcs/active/spd-hold</property>
                    </or>
                </and>
            </condition>
        </enable>
        <input>
            <property>/v22/pfcs/target/pitch</property>
            <scale>-1.0</scale>
        </input>
        <output>
            <property>/v22/pfcs/target/pitch-rate-stick</property>
        </output>
    </filter>

    <!-- Tracks a pitch angle (theta). The pitch is limited to be greater
         than the minimum pitch limit and less than the maximum pitch limit.

         Stage #1 for Pitch Hold.
    -->
    <pid-controller>
        <name>FBW Pitch Hold</name>
        <debug>false</debug>
        <enable>
            <property>/v22/pfcs/active/pitch-hold</property>
        </enable>
        <input>
            <property>/orientation/pitch-deg</property>
        </input>
        <reference>
            <property>/v22/pfcs/target/pitch-deg</property>
            <min>
                <property>/v22/pfcs/settings/pitch-hold-min</property>
            </min>
            <max>
                <property>/v22/pfcs/settings/pitch-hold-max</property>
            </max>
        </reference>
        <output>
            <property>/v22/pfcs/target/pitch-rate-ap</property>
        </output>
        <config>
            <!-- Response should be something like Docs/fbw-pitch-hold.png -->
            <Kp>1.65</Kp>
            <Ti>6.0</Ti>
            <Td>0.0</Td>
            <u_min>
                <property>/v22/pfcs/settings/pitch-rate-limit</property>
                <scale>-1.0</scale>
            </u_min>
            <u_max>
                <property>/v22/pfcs/settings/pitch-rate-limit</property>
            </u_max>
        </config>
    </pid-controller>

    <!-- Merge pitch-rate-stick and pitch-rate-ap using lst-tilt factor
         if A/P Vertical Speed mode is active.
    -->
    <filter>
        <name>FBW Pitch Stick And A/P V/S Merge</name>
        <type>gain</type>
        <gain>1.0</gain>
        <debug>false</debug>
        <enable>
            <condition>
                <and>
                    <property>/v22/afcs/active/vs-hold</property>
                    <not>
                        <property>/v22/afcs/active/spd-hold</property>
                    </not>
                </and>
            </condition>
        </enable>
        <input>
            <expression>
                <sum>
                    <product>
                        <property>/v22/pfcs/target/pitch-rate-stick</property>
                        <property>/v22/pfcs/internal/lst-tilt</property>
                    </product>
                    <product>
                        <property>/v22/pfcs/target/pitch-rate-ap</property>
                        <difference>
                            <value>1.0</value>
                            <property>/v22/pfcs/internal/lst-tilt</property>
                        </difference>
                    </product>
                </sum>
            </expression>
        </input>
        <output>
            <property>/v22/pfcs/target/pitch-rate</property>
        </output>
    </filter>

    <!-- Merge pitch-rate-stick and pitch-rate-ap using lst-tilt factor
         if A/P Horizontal Speed mode is active.
    -->
    <filter>
        <name>FBW Pitch Stick And A/P Speed Merge</name>
        <type>gain</type>
        <gain>1.0</gain>
        <debug>false</debug>
        <enable>
            <condition>
                <and>
                    <property>/v22/afcs/active/spd-hold</property>
                    <not>
                        <property>/v22/afcs/active/vs-hold</property>
                    </not>
                </and>
            </condition>
        </enable>
        <input>
            <expression>
                <sum>
                    <product>
                        <property>/v22/pfcs/target/pitch-rate-ap</property>
                        <property>/v22/pfcs/internal/lst-tilt</property>
                    </product>
                    <product>
                        <property>/v22/pfcs/target/pitch-rate-stick</property>
                        <difference>
                            <value>1.0</value>
                            <property>/v22/pfcs/internal/lst-tilt</property>
                        </difference>
                    </product>
                </sum>
            </expression>
        </input>
        <output>
            <property>/v22/pfcs/target/pitch-rate</property>
        </output>
    </filter>

    <filter>
        <name>FBW Pitch Stick To Pitch Rate</name>
        <type>gain</type>
        <gain>1.0</gain>
        <debug>false</debug>
        <enable>
            <condition>
                <not>
                    <property>/v22/pfcs/active/pitch-hold</property>
                </not>
            </condition>
        </enable>
        <input>
            <property>/v22/pfcs/target/pitch-rate-stick</property>
        </input>
        <output>
            <property>/v22/pfcs/target/pitch-rate</property>
        </output>
    </filter>

    <filter>
        <name>FBW Pitch A/P To Pitch Rate</name>
        <type>gain</type>
        <gain>1.0</gain>
        <debug>false</debug>
        <enable>
            <condition>
                <or>
                    <and>
                        <property>/v22/afcs/active/vs-hold</property>
                        <property>/v22/afcs/active/spd-hold</property>
                    </and>
                    <property>/v22/afcs/active/pitch-hold-no-gs</property>
                </or>
            </condition>
        </enable>
        <input>
            <property>/v22/pfcs/target/pitch-rate-ap</property>
        </input>
        <output>
            <property>/v22/pfcs/target/pitch-rate</property>
        </output>
    </filter>

    <!-- Enable FBW Pitch Rate if FBW Pitch Hold is enabled -->
    <logic>
        <name>FBW Pitch Hold Dependency FBW Pitch Rate</name>
        <enable>
            <property>/v22/pfcs/active/pitch-hold</property>
        </enable>
        <input>
            <true />
        </input>
        <output>
            <property>/v22/pfcs/active/pitch-rate</property>
        </output>
    </logic>

    <!-- Use FBW Pitch Rate if and only if using sidestick controller
         when FBW Pitch Hold is disabled.
    -->
    <logic>
        <name>FBW Sidestick Controller Dependency FBW Pitch Rate</name>
        <enable>
            <condition>
                <not>
                    <property>/v22/pfcs/active/pitch-hold</property>
                </not>
            </condition>
        </enable>
        <input>
            <property>/v22/pfcs/active/sidestick-controller</property>
        </input>
        <output>
            <property>/v22/pfcs/active/pitch-rate</property>
        </output>
    </logic>

    <!-- Tracks a given pitch rate (q). The pitch rate can be no greater
         than the pitch rate limit.

         Also acts as stage #2 for FBW Pitch Hold.
    -->
    <pid-controller>
        <name>FBW Pitch Rate</name>
        <debug>false</debug>
        <enable>
            <property>/v22/pfcs/active/pitch-rate-in-air</property>
        </enable>
        <input>
            <property>/orientation/pitch-rate-degps</property>
        </input>
        <reference>
            <property>/v22/pfcs/target/pitch-rate</property>
            <min>
                <expression>
                    <max>
                        <property>/v22/pfcs/limits/pitch-rate-min-degps</property>
                        <product>
                            <property>/v22/pfcs/settings/pitch-rate-limit</property>
                            <value>-1.0</value>
                        </product>
                    </max>
                </expression>
            </min>
            <max>
                <expression>
                    <min>
                        <property>/v22/pfcs/limits/pitch-rate-max-degps</property>
                        <property>/v22/pfcs/settings/pitch-rate-limit</property>
                    </min>
                </expression>
            </max>
        </reference>
        <output>
            <property>/v22/pfcs/output/elevator</property>
        </output>
        <config>
            <Kp>-0.016</Kp>
            <Ti>0.07</Ti>
            <Td>0.0002</Td>
            <beta>0.1</beta>
            <u_min>-1.0</u_min>
            <u_max>1.0</u_max>
        </config>
    </pid-controller>

    <!-- ================================================================== -->
    <!-- Longitudinal and Lateral VTOL Factors                              -->
    <!-- ================================================================== -->

    <!-- Differential Collective Pitch (DCP) rolls the aircraft by
         increasing the collective pitch of the two proprotors differently [2].
         (Remember that the nacelles are pointing upwards between 97.5
         and 75 degrees)

         DCP depends on the tilt angle of the nacelles, the mast torque,
         and the airspeed [1].
    -->

    <filter>
        <name>FBW DCP Nacelles Tilt Factor</name>
        <type>gain</type>
        <gain>1.0</gain>
        <input>
            <expression>
                <!-- 1.0 if nacelles are tilted at most 30 degrees from
                     vertical axis (or 60 degrees from horizontal axis)

                     0.0 if nacelles are horizontal (90 degrees from
                     vertical axis)

                     Sources: [1] (slide 15, page 4)
                --> 
                <table>
                    <property>/sim/model/v22/tilt</property>
                    <entry><ind>30</ind><dep>1.0</dep></entry>
                    <entry><ind>90</ind><dep>0.0</dep></entry>
                </table>
            </expression>
        </input>
        <output>
            <property>/v22/pfcs/internal/dcp-tilt</property>
        </output>
    </filter>

    <filter>
        <name>FBW DCP Airspeed Factor</name>
        <type>gain</type>
        <gain>1.0</gain>
        <input>
            <expression>
                <!-- 1.0 if speed <= 40 kts, 0.0 if speed >= 60 kts

                     Sources: [1] (slide 15, page 4)
                -->
                <table>
                    <property>/velocities/airspeed-kt</property>
                    <entry><ind>40</ind><dep>1.0</dep></entry>
                    <entry><ind>60</ind><dep>0.0</dep></entry>
                </table>
            </expression>
        </input>
        <output>
            <property>/v22/pfcs/internal/dcp-airspeed</property>
        </output>
    </filter>

    <!-- Lateral Swashplate Gearing (LSG) provides lateral movement [2].

         LSG depends on tilt angle of the nacelles and the airspeed [1].
    -->

    <filter>
        <name>FBW LSG Nacelles Tilt Factor</name>
        <type>gain</type>
        <gain>1.0</gain>
        <input>
            <expression>
                <table>
                    <!-- 1.0 for tilt angle >= 80 degrees (10 degrees
                         from vertical axis)

                         0.0 for tilt angles <= 75 degrees (15 degrees
                         from vertical axis)

                         Sources: [1] (slide 15, page 4)
                    -->
                    <property>/sim/model/v22/tilt</property>
                    <entry><ind>10</ind><dep>1.0</dep></entry>
                    <entry><ind>15</ind><dep>0.0</dep></entry>
                </table>
            </expression>
        </input>
        <output>
            <property>/v22/pfcs/internal/lsg-tilt</property>
        </output>
    </filter>

    <filter>
        <name>FBW LSG Airspeed Factor</name>
        <type>gain</type>
        <gain>1.0</gain>
        <input>
            <expression>
                <!-- 1.0 if speed <= 40 kts, 0.0 if speed >= 60 kts

                     Sources: [1] (slide 15, page 4)
                -->
                <table>
                    <property>/velocities/airspeed-kt</property>
                    <entry><ind>40</ind><dep>1.0</dep></entry>
                    <entry><ind>60</ind><dep>0.0</dep></entry>
                </table>
            </expression>
        </input>
        <output>
            <property>/v22/pfcs/internal/lsg-airspeed</property>
        </output>
    </filter>

    <!-- Factor controlling the forward or aft movement via cyclic
         longitudinal control by tilting both swashplates forward or aft.
         Known as Longitudinal Swashplate Tilting (LST).
    -->
    <filter>
        <name>FBW LST Factor</name>
        <type>gain</type>
        <gain>1.0</gain>
        <input>
            <expression>
                <table>
                    <!-- Sources: [1] (slide 14, page 3) -->
                    <property>/sim/model/v22/tilt</property>
                    <entry><ind>15</ind><dep>1.0</dep></entry>
                    <entry><ind>29</ind><dep>0.9</dep></entry>
                    <entry><ind>90</ind><dep>0.0</dep></entry>
                </table>
            </expression>
        </input>
        <output>
            <property>/v22/pfcs/internal/lst-tilt</property>
        </output>
    </filter>

    <!-- Differential Swashplate Tilting (DST) controls how much one
         swashplate is tilted forward while the other is tilted aft in
         order to yaw to the left or right.
    -->
    <filter>
        <name>FBW DST Factor</name>
        <type>gain</type>
        <gain>1.0</gain>
        <input>
            <expression>
                <table>
                    <!-- Sources: [1] (slide 15, page 4) -->
                    <property>/sim/model/v22/tilt</property>
                    <entry><ind>10</ind><dep>1.0</dep></entry>
                    <entry><ind>90</ind><dep>0.0</dep></entry>
                </table>
            </expression>
        </input>
        <output>
            <property>/v22/pfcs/internal/dst-tilt</property>
        </output>
    </filter>

    <!-- TODO Add dst-airspeed with 1.0 if speed <= 60 kts, 0.0 speed >= unknown kts -->

    <!-- ================================================================== -->
    <!-- Longitudinal and Lateral VTOL Modes                                -->
    <!-- ================================================================== -->

    <filter>
        <name>Direct Mode VTOL Stick Roll</name>
        <type>gain</type>
        <gain>
            <property>/v22/pfcs/settings/vtol/direct-roll-rate-gain</property>
            <abs type="bool">true</abs>
            <max>5.0</max>
        </gain>
        <enable>
            <condition>
                <not>
                    <property>/v22/pfcs/active/roll-rate-in-air</property>
                </not>
            </condition>
        </enable>
        <input>
            <property>/v22/pfcs/target/roll</property>
        </input>
        <output>
            <property>/v22/pfcs/output/vtol/aileron</property>
        </output>
    </filter>

    <!-- Tracks a given roll rate (p) using DCP. The target roll rate is
         limited to be no greater than the roll rate limit.

         Also acts as stage #2 for FBW Roll Hold.
    -->
    <pid-controller>
        <name>FBW VTOL Roll Rate</name>
        <debug>false</debug>
        <enable>
            <property>/v22/pfcs/active/roll-rate-in-air</property>
        </enable>
        <input>
            <property>/orientation/roll-rate-degps</property>
        </input>
        <reference>
            <property>/v22/pfcs/target/roll-rate-bank-limited</property>
            <min>
                <property>/v22/pfcs/settings/roll-rate-limit</property>
                <scale>-1.0</scale>
            </min>
            <max>
                <property>/v22/pfcs/settings/roll-rate-limit</property>
            </max>
        </reference>
        <output>
            <property>/v22/pfcs/output/vtol/aileron</property>
        </output>
        <config>
            <Kp>0.015</Kp>
            <Ti>1.0</Ti>
            <Td>0.0</Td>
            <u_min>-1.0</u_min>
            <u_max>1.0</u_max>
        </config>
    </pid-controller>

    <!-- Connects the pedals directly to the swashplates, bypassing
         any PID controllers, giving the pilot direct unfiltered
         control over the swashplates for yaw rotation.
    -->
    <filter>
        <name>Direct Mode VTOL Pedals Yaw Rate</name>
        <type>gain</type>
        <gain>
            <property>/v22/pfcs/settings/vtol/direct-yaw-rate-gain</property>
            <abs type="bool">true</abs>
            <max>4.0</max>
        </gain>
        <enable>
            <condition>
                <not>
                    <property>/v22/pfcs/active/yaw-rate</property>
                </not>
            </condition>
        </enable>
        <input>
            <property>/v22/pfcs/target/yaw</property>
        </input>
        <output>
            <property>/v22/pfcs/output/vtol/rudder</property>
        </output>
    </filter>

    <filter>
        <name>FBW VTOL Pedals Yaw</name>
        <type>gain</type>
        <gain>40.0</gain>
        <enable>
            <property>/v22/pfcs/active/yaw-rate</property>
        </enable>
        <input>
            <property>/v22/pfcs/target/yaw</property>
        </input>
        <output>
            <property>/v22/pfcs/target/yaw-rate</property>
        </output>
    </filter>

    <!-- Tracks the given yaw rate (r) using DST -->
    <pid-controller>
        <name>FBW VTOL Yaw Rate</name>
        <debug>false</debug>
        <enable>
            <property>/v22/pfcs/active/yaw-rate</property>
        </enable>
        <input>
            <property>/orientation/yaw-rate-degps</property>
        </input>
        <reference>
            <property>/v22/pfcs/target/yaw-rate</property>
            <min>
                <property>/v22/pfcs/settings/yaw-rate-limit</property>
                <scale>-1.0</scale>
            </min>
            <max>
                <property>/v22/pfcs/settings/yaw-rate-limit</property>
            </max>
        </reference>
        <output>
            <property>/v22/pfcs/output/vtol/rudder</property>
        </output>
        <config>
            <Kp>0.95</Kp>
            <Ti>0.5</Ti>
            <Td>0.0</Td>
            <u_min>-4.0</u_min>
            <u_max>4.0</u_max>
        </config>
    </pid-controller>

    <!-- Connects the stick directly to the swashplates, bypassing
         any PID controllers, giving the pilot direct unfiltered
         control over the swashplates for longitudinal movement and
         pitch rotation.
    -->
    <filter>
        <name>Direct Mode VTOL Stick Pitch</name>
        <type>gain</type>
        <gain>
            <property>/v22/pfcs/settings/vtol/direct-pitch-rate-gain</property>
            <abs type="bool">true</abs>
            <max>8.0</max>
        </gain>
        <enable>
            <condition>
                <not>
                    <property>/v22/pfcs/active/pitch-rate-in-air</property>
                </not>
            </condition>
        </enable>
        <input>
            <property>/v22/pfcs/target/pitch</property>
        </input>
        <output>
            <property>/v22/pfcs/output/vtol/elevator</property>
        </output>
    </filter>

    <!-- Tracks a given pitch rate (q). The pitch rate can be no greater
         than the pitch rate limit.

         Also acts as stage #2 for FBW Pitch Hold.
    -->
    <pid-controller>
        <name>FBW VTOL Pitch Rate</name>
        <debug>false</debug>
        <enable>
            <property>/v22/pfcs/active/pitch-rate-in-air</property>
        </enable>
        <input>
            <property>/orientation/pitch-rate-degps</property>
        </input>
        <reference>
            <property>/v22/pfcs/target/pitch-rate</property>
            <min>
                <property>/v22/pfcs/settings/pitch-rate-limit</property>
                <scale>-1.0</scale>
            </min>
            <max>
                <property>/v22/pfcs/settings/pitch-rate-limit</property>
            </max>
        </reference>
        <output>
            <property>/v22/pfcs/output/vtol/elevator</property>
        </output>
        <config>
            <Kp>-0.40</Kp>
            <Ti>0.3</Ti>
            <Td>0.0000001</Td>
            <u_min>-4.0</u_min>
            <u_max>8.0</u_max>
        </config>
    </pid-controller>

    <filter>
        <name>FBW Left Nacelle Swashplate Tilt</name>
        <type>gain</type>
        <gain>1.0</gain>
        <input>
            <expression>
                <sum>
                    <product>
                        <property>/v22/pfcs/output/vtol/rudder</property>
                        <property>/v22/pfcs/internal/dst-tilt</property>
                    </product>
                    <product>
                        <property>/v22/pfcs/output/vtol/elevator</property>
                        <property>/v22/pfcs/internal/lst-tilt</property>
                    </product>
                </sum>
            </expression>
        </input>
        <output>
            <property>/sim/model/v22/rotor/left/elevator</property>
        </output>
    </filter>

    <filter>
        <name>FBW Right Nacelle Swashplate Tilt</name>
        <type>gain</type>
        <gain>1.0</gain>
        <input>
            <expression>
                <sum>
                    <product>
                        <property>/v22/pfcs/output/vtol/rudder</property>
                        <property>/v22/pfcs/internal/dst-tilt</property>
                        <value>-1.0</value>
                    </product>
                    <product>
                        <property>/v22/pfcs/output/vtol/elevator</property>
                        <property>/v22/pfcs/internal/lst-tilt</property>
                    </product>
                </sum>
            </expression>
        </input>
        <output>
            <property>/sim/model/v22/rotor/right/elevator</property>
        </output>
    </filter>

    <!-- Connects the stick directly to the swashplates, bypassing
         any PID controllers, giving the pilot direct unfiltered
         control over the swashplates for lateral movement.
    -->
    <filter>
        <name>Direct Mode VTOL Stick Lateral Movement</name>
        <type>gain</type>
        <gain>
            <property>/v22/pfcs/settings/vtol/direct-lateral-move-gain</property>
            <abs type="bool">true</abs>
            <max>5.0</max>
        </gain>
        <!-- <enable>
            <condition>
                <not>
                    <property>/v22/pfcs/active/lateral-move</property>
                </not>
            </condition>
        </enable> -->
        <input>
            <property>/v22/pfcs/target/roll</property>
        </input>
        <output>
            <property>/v22/pfcs/output/vtol/lateral</property>
        </output>
    </filter>

    <filter>
        <name>FBW Nacelles Lateral Tilt</name>
        <type>gain</type>
        <gain>1.0</gain>
        <input>
            <expression>
                <product>
                    <property>/v22/pfcs/internal/lsg-tilt</property>
                    <property>/v22/pfcs/internal/lsg-airspeed</property>
                    <property>/v22/pfcs/output/vtol/lateral</property>
                </product>
            </expression>
        </input>
        <output>
            <property>/sim/model/v22/rotor/left/aileron</property>
            <property>/sim/model/v22/rotor/right/aileron</property>
        </output>
    </filter>

</PropertyList>
